import javax.swing.*;import java.awt.*;import java.util.Observer;import java.util.Observable;// class DiceImage is Observerpublic class DiceImage extends JButton implements Observer {    // variables    static ImageIcon icon1 = new ImageIcon(DiceImage.class.getResource("face01.png"));    static ImageIcon icon2 = new ImageIcon(DiceImage.class.getResource("face02.png"));    static ImageIcon icon3 = new ImageIcon(DiceImage.class.getResource("face03.png"));    static ImageIcon icon4 = new ImageIcon(DiceImage.class.getResource("face04.png"));    static ImageIcon icon5 = new ImageIcon(DiceImage.class.getResource("face05.png"));    static ImageIcon icon6 = new ImageIcon(DiceImage.class.getResource("face06.png"));    static ImageIcon [] icons = {icon1, icon2, icon3, icon4, icon5, icon6};    Dice dice;    // constructor#1    public DiceImage(){        setIcon(icons[0]);    }    // constructor#2 that has JButton as parameter    public DiceImage(JButton jButton, Dice dice){        setIcon(icons[0]);        this.dice = dice;    }    // method    public void changeImage (int diceValue){        if(diceValue >=1 && diceValue <=6){            setIcon(icons[diceValue-1]);        }    }    public void setHoldStatus(boolean holdStatus){        dice.holdStatus = holdStatus;    }    public boolean getHoldStatus(){        return dice.holdStatus;    }    // method of Observer    @Override    public void update(Observable o, Object arg) {        Dice theObservedDice = (Dice)o;        int theObservedDiceValue = theObservedDice.getValue();        changeImage(theObservedDiceValue);    }}